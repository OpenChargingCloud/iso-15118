/*
 * HSRM Wallbox API
 * This REST-API serves as a interface to a ISO-15118 SECC Server for vehicle to grid communication between an electric vehicle and a charging station. Over this API new charging sessions can be created and controlled. The API propeses methods to control the charging parameters during a charging session.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: fabian.birk@student.hs-rm.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.v2gclarity.risev2g.secc.wallboxServerEndpoint.rest.openapi.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.v2gclarity.risev2g.secc.wallboxServerEndpoint.rest.openapi.model.PhysicalValueType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * ChargeParameterDcChargeParameter
 */
@JsonPropertyOrder({
  ChargeParameterDcChargeParameter.JSON_PROPERTY_MAX_CURRENT_LIMIT,
  ChargeParameterDcChargeParameter.JSON_PROPERTY_MAX_POWER_LIMIT,
  ChargeParameterDcChargeParameter.JSON_PROPERTY_MAX_VOLTAGE_LIMIT,
  ChargeParameterDcChargeParameter.JSON_PROPERTY_MIN_CURRENT_LIMIT,
  ChargeParameterDcChargeParameter.JSON_PROPERTY_MIN_VOLTAGE_LIMIT,
  ChargeParameterDcChargeParameter.JSON_PROPERTY_CURRENT_REGULATION_TOLERANCE,
  ChargeParameterDcChargeParameter.JSON_PROPERTY_PEAK_CURRENT_RIPPLE,
  ChargeParameterDcChargeParameter.JSON_PROPERTY_ENERGY_TO_BE_DELIVERED
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2021-02-22T09:14:36.215937400+01:00[Europe/Berlin]")
public class ChargeParameterDcChargeParameter   {
  public static final String JSON_PROPERTY_MAX_CURRENT_LIMIT = "max-current-limit";
  @JsonProperty(JSON_PROPERTY_MAX_CURRENT_LIMIT)
  private PhysicalValueType maxCurrentLimit;

  public static final String JSON_PROPERTY_MAX_POWER_LIMIT = "max-power-limit";
  @JsonProperty(JSON_PROPERTY_MAX_POWER_LIMIT)
  private PhysicalValueType maxPowerLimit;

  public static final String JSON_PROPERTY_MAX_VOLTAGE_LIMIT = "max-voltage-limit";
  @JsonProperty(JSON_PROPERTY_MAX_VOLTAGE_LIMIT)
  private PhysicalValueType maxVoltageLimit;

  public static final String JSON_PROPERTY_MIN_CURRENT_LIMIT = "min-current-limit";
  @JsonProperty(JSON_PROPERTY_MIN_CURRENT_LIMIT)
  private PhysicalValueType minCurrentLimit;

  public static final String JSON_PROPERTY_MIN_VOLTAGE_LIMIT = "min-voltage-limit";
  @JsonProperty(JSON_PROPERTY_MIN_VOLTAGE_LIMIT)
  private PhysicalValueType minVoltageLimit;

  public static final String JSON_PROPERTY_CURRENT_REGULATION_TOLERANCE = "current-regulation-tolerance";
  @JsonProperty(JSON_PROPERTY_CURRENT_REGULATION_TOLERANCE)
  private PhysicalValueType currentRegulationTolerance;

  public static final String JSON_PROPERTY_PEAK_CURRENT_RIPPLE = "peak-current-ripple";
  @JsonProperty(JSON_PROPERTY_PEAK_CURRENT_RIPPLE)
  private PhysicalValueType peakCurrentRipple;

  public static final String JSON_PROPERTY_ENERGY_TO_BE_DELIVERED = "energy-to-be-delivered";
  @JsonProperty(JSON_PROPERTY_ENERGY_TO_BE_DELIVERED)
  private PhysicalValueType energyToBeDelivered;

  public ChargeParameterDcChargeParameter maxCurrentLimit(PhysicalValueType maxCurrentLimit) {
    this.maxCurrentLimit = maxCurrentLimit;
    return this;
  }

  /**
   * Get maxCurrentLimit
   * @return maxCurrentLimit
   **/
  @JsonProperty("max-current-limit")
  @ApiModelProperty(required = true, value = "")
  @NotNull @Valid 
  public PhysicalValueType getMaxCurrentLimit() {
    return maxCurrentLimit;
  }

  public void setMaxCurrentLimit(PhysicalValueType maxCurrentLimit) {
    this.maxCurrentLimit = maxCurrentLimit;
  }

  public ChargeParameterDcChargeParameter maxPowerLimit(PhysicalValueType maxPowerLimit) {
    this.maxPowerLimit = maxPowerLimit;
    return this;
  }

  /**
   * Get maxPowerLimit
   * @return maxPowerLimit
   **/
  @JsonProperty("max-power-limit")
  @ApiModelProperty(required = true, value = "")
  @NotNull @Valid 
  public PhysicalValueType getMaxPowerLimit() {
    return maxPowerLimit;
  }

  public void setMaxPowerLimit(PhysicalValueType maxPowerLimit) {
    this.maxPowerLimit = maxPowerLimit;
  }

  public ChargeParameterDcChargeParameter maxVoltageLimit(PhysicalValueType maxVoltageLimit) {
    this.maxVoltageLimit = maxVoltageLimit;
    return this;
  }

  /**
   * Get maxVoltageLimit
   * @return maxVoltageLimit
   **/
  @JsonProperty("max-voltage-limit")
  @ApiModelProperty(required = true, value = "")
  @NotNull @Valid 
  public PhysicalValueType getMaxVoltageLimit() {
    return maxVoltageLimit;
  }

  public void setMaxVoltageLimit(PhysicalValueType maxVoltageLimit) {
    this.maxVoltageLimit = maxVoltageLimit;
  }

  public ChargeParameterDcChargeParameter minCurrentLimit(PhysicalValueType minCurrentLimit) {
    this.minCurrentLimit = minCurrentLimit;
    return this;
  }

  /**
   * Get minCurrentLimit
   * @return minCurrentLimit
   **/
  @JsonProperty("min-current-limit")
  @ApiModelProperty(required = true, value = "")
  @NotNull @Valid 
  public PhysicalValueType getMinCurrentLimit() {
    return minCurrentLimit;
  }

  public void setMinCurrentLimit(PhysicalValueType minCurrentLimit) {
    this.minCurrentLimit = minCurrentLimit;
  }

  public ChargeParameterDcChargeParameter minVoltageLimit(PhysicalValueType minVoltageLimit) {
    this.minVoltageLimit = minVoltageLimit;
    return this;
  }

  /**
   * Get minVoltageLimit
   * @return minVoltageLimit
   **/
  @JsonProperty("min-voltage-limit")
  @ApiModelProperty(required = true, value = "")
  @NotNull @Valid 
  public PhysicalValueType getMinVoltageLimit() {
    return minVoltageLimit;
  }

  public void setMinVoltageLimit(PhysicalValueType minVoltageLimit) {
    this.minVoltageLimit = minVoltageLimit;
  }

  public ChargeParameterDcChargeParameter currentRegulationTolerance(PhysicalValueType currentRegulationTolerance) {
    this.currentRegulationTolerance = currentRegulationTolerance;
    return this;
  }

  /**
   * Get currentRegulationTolerance
   * @return currentRegulationTolerance
   **/
  @JsonProperty("current-regulation-tolerance")
  @ApiModelProperty(value = "")
  @Valid 
  public PhysicalValueType getCurrentRegulationTolerance() {
    return currentRegulationTolerance;
  }

  public void setCurrentRegulationTolerance(PhysicalValueType currentRegulationTolerance) {
    this.currentRegulationTolerance = currentRegulationTolerance;
  }

  public ChargeParameterDcChargeParameter peakCurrentRipple(PhysicalValueType peakCurrentRipple) {
    this.peakCurrentRipple = peakCurrentRipple;
    return this;
  }

  /**
   * Get peakCurrentRipple
   * @return peakCurrentRipple
   **/
  @JsonProperty("peak-current-ripple")
  @ApiModelProperty(required = true, value = "")
  @NotNull @Valid 
  public PhysicalValueType getPeakCurrentRipple() {
    return peakCurrentRipple;
  }

  public void setPeakCurrentRipple(PhysicalValueType peakCurrentRipple) {
    this.peakCurrentRipple = peakCurrentRipple;
  }

  public ChargeParameterDcChargeParameter energyToBeDelivered(PhysicalValueType energyToBeDelivered) {
    this.energyToBeDelivered = energyToBeDelivered;
    return this;
  }

  /**
   * Get energyToBeDelivered
   * @return energyToBeDelivered
   **/
  @JsonProperty("energy-to-be-delivered")
  @ApiModelProperty(value = "")
  @Valid 
  public PhysicalValueType getEnergyToBeDelivered() {
    return energyToBeDelivered;
  }

  public void setEnergyToBeDelivered(PhysicalValueType energyToBeDelivered) {
    this.energyToBeDelivered = energyToBeDelivered;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChargeParameterDcChargeParameter chargeParameterDcChargeParameter = (ChargeParameterDcChargeParameter) o;
    return Objects.equals(this.maxCurrentLimit, chargeParameterDcChargeParameter.maxCurrentLimit) &&
        Objects.equals(this.maxPowerLimit, chargeParameterDcChargeParameter.maxPowerLimit) &&
        Objects.equals(this.maxVoltageLimit, chargeParameterDcChargeParameter.maxVoltageLimit) &&
        Objects.equals(this.minCurrentLimit, chargeParameterDcChargeParameter.minCurrentLimit) &&
        Objects.equals(this.minVoltageLimit, chargeParameterDcChargeParameter.minVoltageLimit) &&
        Objects.equals(this.currentRegulationTolerance, chargeParameterDcChargeParameter.currentRegulationTolerance) &&
        Objects.equals(this.peakCurrentRipple, chargeParameterDcChargeParameter.peakCurrentRipple) &&
        Objects.equals(this.energyToBeDelivered, chargeParameterDcChargeParameter.energyToBeDelivered);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maxCurrentLimit, maxPowerLimit, maxVoltageLimit, minCurrentLimit, minVoltageLimit, currentRegulationTolerance, peakCurrentRipple, energyToBeDelivered);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChargeParameterDcChargeParameter {\n");
    
    sb.append("    maxCurrentLimit: ").append(toIndentedString(maxCurrentLimit)).append("\n");
    sb.append("    maxPowerLimit: ").append(toIndentedString(maxPowerLimit)).append("\n");
    sb.append("    maxVoltageLimit: ").append(toIndentedString(maxVoltageLimit)).append("\n");
    sb.append("    minCurrentLimit: ").append(toIndentedString(minCurrentLimit)).append("\n");
    sb.append("    minVoltageLimit: ").append(toIndentedString(minVoltageLimit)).append("\n");
    sb.append("    currentRegulationTolerance: ").append(toIndentedString(currentRegulationTolerance)).append("\n");
    sb.append("    peakCurrentRipple: ").append(toIndentedString(peakCurrentRipple)).append("\n");
    sb.append("    energyToBeDelivered: ").append(toIndentedString(energyToBeDelivered)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

